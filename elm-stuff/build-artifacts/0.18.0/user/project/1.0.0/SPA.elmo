var _user$project$SPA$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$SPA$render_page = function (model) {
	var page_content = function () {
		var _p0 = model.currentPage;
		switch (_p0.ctor) {
			case 'Home':
				return _elm_lang$html$Html$text('Home');
			case 'Login':
				return _elm_lang$html$Html$text('Login');
			default:
				return _elm_lang$html$Html$text('About');
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: page_content,
			_1: {ctor: '[]'}
		});
};
var _user$project$SPA$Model = function (a) {
	return {currentPage: a};
};
var _user$project$SPA$About = {ctor: 'About'};
var _user$project$SPA$Login = {ctor: 'Login'};
var _user$project$SPA$Home = {ctor: 'Home'};
var _user$project$SPA$route = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(
			_evancz$url_parser$UrlParser$map,
			_user$project$SPA$Home,
			_evancz$url_parser$UrlParser$s('home')),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$SPA$Login,
				_evancz$url_parser$UrlParser$s('login')),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$SPA$About,
					_evancz$url_parser$UrlParser$s('about')),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$SPA$init = function (location) {
	var page = function () {
		var _p1 = A2(_evancz$url_parser$UrlParser$parseHash, _user$project$SPA$route, location);
		if (_p1.ctor === 'Nothing') {
			return _user$project$SPA$Home;
		} else {
			return _p1._0;
		}
	}();
	return {
		ctor: '_Tuple2',
		_0: _user$project$SPA$Model(page),
		_1: _elm_lang$core$Platform_Cmd$none
	};
};
var _user$project$SPA$update = F2(
	function (msg, model) {
		var _p2 = msg;
		if (_p2.ctor === 'GoTo') {
			var _p3 = _p2._0;
			if (_p3.ctor === 'Nothing') {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentPage: _user$project$SPA$Home}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentPage: _p3._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			}
		} else {
			return {
				ctor: '_Tuple2',
				_0: model,
				_1: _elm_lang$navigation$Navigation$newUrl(_p2._0)
			};
		}
	});
var _user$project$SPA$LinkTo = function (a) {
	return {ctor: 'LinkTo', _0: a};
};
var _user$project$SPA$render_menu = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$SPA$LinkTo('#home')),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Home'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$SPA$LinkTo('#login')),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Login'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$SPA$LinkTo('#about')),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('About'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$SPA$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('SPA application'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$SPA$render_menu(model),
				_1: {
					ctor: '::',
					_0: _user$project$SPA$render_page(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$SPA$GoTo = function (a) {
	return {ctor: 'GoTo', _0: a};
};
var _user$project$SPA$locFor = function (location) {
	return _user$project$SPA$GoTo(
		A2(_evancz$url_parser$UrlParser$parseHash, _user$project$SPA$route, location));
};
var _user$project$SPA$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$SPA$locFor,
	{init: _user$project$SPA$init, update: _user$project$SPA$update, view: _user$project$SPA$view, subscriptions: _user$project$SPA$subscriptions})();
